/**
 * @class       Skii.SelectInput
 * @version     0.1
 * @author      Charles Demers - @charles_demers
 *
 * @requires    [core.js, Skii.ContextualMenu.js, jquery-1.5+.js]
 */

Skii.SelectInput=function(d,g){var h=this;g=g||{};var c=this.$realSelect=$(d);var f=this.realSelect=c.get(0);this.classPrefix="skii-selectinput";var a=c.css("position"),b={"class":this.classPrefix,css:{position:(a=="static")?"relative":a,"float":c.css("float"),top:c.css("top"),right:c.css("right"),bottom:c.css("bottom"),left:c.css("left"),marginTop:c.css("margin-top"),marginRight:c.css("margin-right"),marginBottom:c.css("margin-bottom"),marginLeft:c.css("margin-left")},html:'<p class="'+this.classPrefix+'-selected"></p><div class="'+this.classPrefix+'-arrow"></div>'};b.css.minWidth=c.outerWidth();b.css.maxWidth=b.css.minWidth;if(g.id){b.id=g.id;}this.$select=$("<div>",b);c.hide();this.$select.insertAfter(c);var e=this.$select.offset();this.optionList=new Skii.ContextualMenu({options:this.rebuildOptions(true),shouldFitInViewport:true,canHaveScrollbar:true,isFixed:false,width:c.outerWidth()});$(this.optionList).one("skii.contextualmenu.selection",function(l,j,i,k){$(h.optionList).bind("skii.contextualmenu.selection",function(p,n,m,o){h._changeValue(h.$realSelect.find("option:eq("+m+")"),false,true);});h._changeValue(h.$realSelect.find("option:eq("+i+")"),false,false);});this._changeValue(this.$realSelect.find("option:eq("+this.defaultIndex()+")"),true,false);if(this.$realSelect.attr("disabled")){this.disable();}else{this.enable();}};Skii.SelectInput.prototype={enable:function(){var a=this.$select;a.attr("tabindex","0");a.bind("mousedown",$.proxy(this,"toggleOptionsVisibility"));a.bind("keydown",$.proxy(this,"_manageKeyDown"));a.bind("keyup",$.proxy(this,"_manageKeyUp"));$(document).bind("mouseup",$.proxy(this,"_manageClickOutside"));a.removeClass("disabled");},disable:function(){var a=this.$select;a.removeAttr("tabindex");a.unbind("click");a.unbind("keyup",this._manageKeyUp);a.unbind("keydown",this._manageKeyDown);$(document).unbind("click",this._manageClickOutside);a.addClass("disabled");},toggleOptionsVisibility:function(a){a.preventDefault();this.optionList.toggleVisibility({x:this.$select.offset().left,y:this.$select.offset().top+this.$select.outerHeight()});},_changeValue:function(a,d,c){if(a.length){var b=a.get(0).index;this.$realSelect.find("option:selected").removeAttr("selected");a.attr("selected","selected");this.$select.find("."+this.classPrefix+"-selected").text(a.text());$(this).trigger("skii.selectinput.change",[{index:b,value:a.attr("value")}]);if(c){this.$realSelect.trigger("change");}if(d){this.optionList.selectOption(this.optionList.getSelectableOptions().get(b));}this.optionList.hide();}},_manageClickOutside:function(c){if(this.optionList.isVisible){var b=this.$select,a=this.optionList.$list;if(b.has(c.target).length===0&&b.get(0)!=c.target&&a.has(c.target).length===0&&a.get(0)!=c.target){this.optionList.hide();}}},_manageKeyUp:function(a){switch(a.which){case Skii.KeyCodes.SPACE:case Skii.KeyCodes.ARROW_UP:case Skii.KeyCodes.ARROW_DOWN:a.preventDefault();this.toggleOptionsVisibility(a);break;}},_manageKeyDown:function(a){if(a==Skii.KeyCodes.TAB&&this.optionList.isVisible===false){return true;}switch(a.which){case Skii.KeyCodes.SPACE:case Skii.KeyCodes.ESCAPE:case Skii.KeyCodes.PAGE_UP:case Skii.KeyCodes.PAGE_DOWN:case Skii.KeyCodes.ARROW_UP:case Skii.KeyCodes.ARROW_DOWN:a.preventDefault();this.optionList.focus();return false;break;}},rebuildOptions:function(d){var f=this,b=[],e="";mainOptionListChildren=this.$realSelect.children();var c=function(m){var k=[];for(var j=0,h=m.length;j<h;j++){if(m[j].nodeName.toLowerCase()=="optgroup"){var g=c($(m[j]).children());k.push({label:m[j].label,value:g,selectable:false});}else{k.push({label:m[j].text,value:m[j].value});}}return k;};var a=c(mainOptionListChildren);if(d){return a;}this.optionList.rebuildOptions(a);},defaultIndex:function(){for(var b=0,a=this.realSelect.options.length;b<a;b++){if(this.realSelect.options[b].defaultSelected){return b;}}return 0;},defaultValue:function(){return this.realSelect.options[this.defaultIndex()].value;},index:function(a){if(typeof a=="undefined"){return this.realSelect.selectedIndex;}else{this._changeValue(this.$realSelect.find("option:eq("+a+")"),true,true);}},value:function(a){if(typeof a=="undefined"){return this.realSelect.value;}else{this._changeValue(this.$realSelect.find('option[value="'+a+'"]'),true,true);}}};